Attacks, Threats, and Vulnerabilities

    Malware

        Malware - Short for malicious software.

        Comparing Viruses, worms, and trojans

            Virus - Malware spread by human action
                    * The best way to prevent a virus is user education.

                Worm - Malware that spread by themselves
                    * Spreads from a host to other computers.
                    * The best way to prevent a worm is to update operating systems with official updates and patches.

                        * FIRST WORM -- RTM WORM
                        The first major worm outbreak was in 1988 and was called the RTM worm. 
                        Named after its designer, Robert T. Morris. 
                        It infected 10% of the internet at the time.
                        Eye-opening event for security

                        * STUXNET
                        Stuxnet was created in 2010 to infiltrate an Iranian nuclear enrichment facility.
                        It was the first worm to cross the virtual/physical barrier in a major way.
                        Damaged uranium enrichment equipment by causing centrifuges to spin out of control

                Trojan Horse - Malware that is disguised to be a beneficial software
                    * Software does perform as expected but also delivers malicious payload behind the scenes
                    * The best way to prevent a trojan horse attack is to use application control to limit what applications can do on a system.

                Remote Access Trojan (RAT) - Malware that provides a backdoor to hacked systems

                Each malware has a propagation mechanism and a payload.
        
        Malware Payloads

            Each malware has a propagation mechanism and a payload.
                
                Propagation mechanism - The way that malware objects spread

                Payload - The malicious action that the malware performs 
                    * Any malware can carry any payload.

            Adware - Malware that displays advertisements.
                Generates revenue for the malware author instead of the advertisement creator
                    Can redirect search queries to a search engine controlled by the malware author or one with which the malware author has a partnership agreement.
                    Display pop-up advertisements that the user might blame the website for
                    Replace legitimate ads with ads from the malware author

            Spyware - Malware that gathers information without the user's knowledge.
                The information is sent back to the malware author who can use the information for any purpose such as identity theft or to access financial accounts.
                    keystroke loggers - capture every key the user presses, or they can monitor users visiting certain websites and recording usernames and passwords.
                    Monitoring web browsing - monitors web queries to later target advertisements to the user.
                    Search hard drives or cloud storage - searches through storage media to find records such as social security numbers or anything that can be useful to the actor.
                Potentially Unwanted programs (PUPs) - programs that are slipped onto a system by the software installers.

            Ransomware - Blocking access to parts of a computer in exchange for services or finances.
                Normally encrypting files behind an encrypted key and selling the key (WannaCry)
                * WannaCry spread during 2017, exploiting EternalBlue Windows vulnerability
                    * Encrypted files and demanded Bitcoin as a ransom

            Crypto-malware - a form of malware that takes over the capacity of a user's system to mine cryptocurrency.
                * (EXAM TIP) It is easy to confuse ransomware and crypto-malware
                    Malware is named after what the threat actor wants at the beginning of the name

            Tips to avoid Adware, Spyware, ransomware, and crypto-malware
                Installing and updating antimalware and antivirus software on systems
                Applying security patches promptly
                User education
        
        Understanding backdoors and logic Bombs

            Backdoors - A programmer provides a means to grant themselves or others future access to a system.
                Usually done with good intent such as ParSec or TeamViewer but can have unintended side-effects.
                    hardcoded accounts - Accounts made on a system with the purpose of a later use
                    Default passwords - A password that works with an account that might be changed or known
                    Unknown access channels - A way to gain access to a system without going through the normal authentication
        
            Logic Bombs - Malware that is set to execute a payload when certain conditions are met.
                Date/Time reached (Zero Day)
                File contents are changed
                API calls
                
            Tips to avoid backdoors and logic bombs
                Routinely change default passwords
                Disable unused accounts
                Monitor security bulletins for news

                
            
            Propagation mechanism - The way that malware objects spread

            Payload - The malicious action that the malware performs 
                * Any malware can carry any payload.

        Advanced malware

            Rootkits - Malware that is used to escalate a users privilege on a system
                Root accounts - A special superuser account that provides unrestricted access to system resources.
                Can be used to install backdoors, botnet agents, adware/spyware, and anti-theft mechanisms on systems

                User mode rootkits
                    Run with normal user privileges
                    Fairly easy to write and difficult to detect

                Kernal mod rootkits
                    Run with system privileges
                    Are difficult to write and easy to detect
                    
            Fileless virus - a virus that remains in memory without a file present
                Examples are Microsoft Office macros, JavaScript code, and Windows registry persistence
        
        Understanding Botnets

            Botnet - A collection of 'zombie' computers that follow orders from a command and control (CNC) system
                Steal computing power, network bandwidth, and storage capacity of malicious means
                Spread through other forms of malware
                Used to deliver spam, engage in DDoS attacks, mine cryptocurrency, or perform brute force attacks
                Communications must be indirect and redundant 
                    Such as Internet relay chat (IRC)
                    Twitter accounts
                    Peer-to-Peer (P2P) communications within the botnet itself

                1. Infect machines with malware
                2. Convert to bots in the botnet
                3. Spread the infection to other machines
                4. Check in with the CNC
                5. Wait for instructions
                6. Deliver payloads

        Malicious Script Execution

            Script - A sequence of instructions written in a programming language to automate work.

                Shell scripts - Run at the command line and are integrated with the operating system.

                Application scripts - Run within the software and integrate with that application.

                Programming languages - Allow for the creation of general-purpose code.

                    Bash - A shell scripting language used on Linux and Mac systems.

                    PowerShell - Similar to bash, it allows for scripting capabilities on Windows systems.

                    Macros - Scripts that run within an application to automate tasks within that application (Visual Basic for Automation (VBA)).

                    Python - A general-purpose language used to create a diverse set of scripts.

    Understanding Attackers

            These attackers vary depending on any of the following:
                
                Internal or External
                Level of sophistication
                Access to resources
                Motivation
                Intent

            Examples of these attackers are:

                Script Kiddies - Unskilled attackers who simply reuse hacking tools developed by others.
                    Script kiddies are easily taken care of with basic security controls such as regular patching, endpoint security software, firewalls, and Intrusion Prevention Systems (IPS)

                Hacktivists - Seek to use hacking tools to advance political and social agendas
                    Usually working for a specific motivation

                Organized Crime - Criminal syndicates use hacking tools such as ransomware, for financial gain
                    May possess advanced technical skills and use them for a financial gain

                Corporate Espionage - Competitors may use hacking tools and techniques for corporate espionage purposes
                    Not limited to corporate levels, often used to obtain data that is confidential

                Nation-state - Sponsored and highly sophisticated advanced persistent threats (APT) groups
                    Often military units and very difficult to detect, and can attack civilians and other nations 

            Classifying Hackers by Hats

                White Hat Hackers - Operate with permission and good intent and are knowingly hacking a target with full permission to find security flaws in a system.
                Grey Hat hackers - Operate without permission but with good intent. This type of hacking is still illegal.
                Black Hat Hackers - Operate illegally with malicious intent.

            Preventing Insider Threats

                Insider threats - Risk of internal compromise from former and current employees, contractors, and other insiders who can exploit their privileged access to a system.

                FUN-FACT: 51% of organizations experiencing a security breach suffered an insider attack
                FUN-FACT: 67% of insider breaches were more costly than external attacks

                These insider attacks often occur within trusted users such as executives, IT professionals, and other trusted users.

                Privilege Escalation Attacks

                    Privilege Escalation Attacks - Take a normal account and escalate the privilege the account has allowing them to access more of a system

                To avoid insider attacks

                    Perform background checks to uncover past legal issues
                    Give users only the permissions that they need (principle of least privilege)
                    Require multiple users to carry out sensitive operations
                    Implement mandatory vacation for critical staff to potentially uncover fraud as the staff will be out of the office and unable to cover up their activity

                Shadow IT

                    Shadow IT - technology is brought into an organization by individual employees without the approval of IT professionals (USBs found in parking lots)

            Attack Vectors

                Attack vectors provide an attacker an initial way into the organization
            
                Examples of common attack vectors are:

                    Email - Used to send phishing messages with malicious content or ransomware
                    Social Media - Spread malware and can be used as part of an influence campaign
                    USB - Removable media such as USB drives may contain media that triggers when inserted into a new device that contains malicious content
                    Card Skimmers - Read magnetic stripes which may then be used to clone financial cards
                    Cloud Services - These services can be improperly secured for content and systems
                    Direct Access - Attackers can take advantage of direct access to a system through ethernet cables or open USB ports on systems and can easily compromise them.
                    Tampering with devices in the supply chain - attackers can insert a backdoor during the supply chain to grant access in the future
                    Wireless Networks - An easy way for attackers to gain access to an organization's network remotely

            Zero Days and APTs

                Zero Day attack - A vulnerability in a product that has not yet been patched by the vendor/author

                    The window of Vulnerability - The time between when the zero-day vulnerability is discovered and the time when the patch is released
                    
                    These attacks can be mitigated by installing recent patches provided by software authors as soon as they are available
                        Sometimes there are vulnerabilities in code even after a patch is released

                    When a vulnerability is found (ethically)

                        1. Notify the vendor of said vulnerabilities
                        2. Provide a reasonable amount of time for the vendor to fix the vulnerability
                        3. Disclose the vulnerability publicly

                    When a vulnerability is found (un-ethically)

                        Keep the vulnerability a secret from the author/vendor and use it to make a zero-day attack using the vulnerability

                Advanced Persistent Threats (APT)

                    APT - Typically well-funded and highly skilled
                        - Typically government-sponsored such as military units
                        - Have access to zero-day attacks and other highly sophisticated weapons
                        - Work methodically to gain access to a target

                    To prevent an APT from attacking

                        - Implement strong security measures for a strong foundation (encryption and rigorous monitoring)

    Threat Intelligence
            
            Threat Intelligence
                    - Allows teams to stay up to date on current risks
                    - Set of activities that an organization undertakes to educate itself about changes in the cybersecurity threat landscape, and adapt security controls based upon that information

                    Open-source intelligence
                        - Security websites
                        - Vulnerability databases
                        - News media
                        - Social media
                        - Dark web
                        - Information-sharing centers
                        - File and code repositories
                        - Security researchers

                        Reading through all of this open-source information can take a lot of time. Therefore, many companies use proprietary and closed-source threat intelligence solutions using predictive analytics.
                            Products range from information briefs to real-time IP reputation information
                            Organizations may send these feeds directly to firewalls, Intrusion Prevention Systems, and other security tools to block access from suspect IP addresses
                            A cool example of a real-time IP reputation system is on the homepage of https://threatmap.checkpoint.com/
                        
                        Evaluation of a Security source
                            Timeliness - How quickly will the source publish information about the threat?
                            Accuracy - How accurate is the data delivered by the source?
                            Reliability - How often is the source correct in what they say or post?
                
            Managing Threat Indicators

                Threat Indicator - Properties that describe a threat (Ex. IP addresses, malicious file signatures, communication patterns)

            Sharing threat Indicators

                    Cyber Observable eXpression (CybOX) - Standardized scheme for categorizing security observations with like-minded individuals
                        Used to share properties we can share to describe intrusion attempts, malicious software, and other observable security events

                    Structured Threat Information eXpression (STIX) - Used to share information between systems inside an organization
                        A standardized language used to communicate security information between systems and organizations

                    Trusted Automated eXchange of Indicator Information (TAXII) - A set of services that share security information between systems in an organization
                        STIX but automated


                    CybOX - Provides the Shema that we can use to classify different threats and is used to define the information elements for different languages 
                        *EXAM TIP - cybOX is not covered on the exam, but STIX and TAXII are

                    OpenIOC - Mandiant (produced by FireEye) threat framework
                        Provides data such as file size and instructions in .dll files

                    Security tools and services should support a standardized information scheme to produce and consume data efficiently.
            
            Intelligence Sharing

                TAXII, STIX, and CybOX all facilitate information sharing.

                Information sharing is beneficial for:
                    - Incident Response Teams
                    - Vulnerability Management Teams
                    - Risk Management Teams
                    - Security Engineering Teams
                    - Detection and Monitoring Teams (SOC)

                Information Sharing Analysis Centers (ISACs)
                    - Goal is to gather and organize data from threat intelligence without jeopardizing anonymity
            
            Threat Research
                - Threat research uses threat intelligence to get inside the minds of our adversaries
                
                Techniques Used in threat research
                    - Reputational threat research - Identify potentially malicious actors based on their use of IP addresses, email addresses, domains, etc. that were used previously in attacks
                    - Behavioral threat research - Identify potentially malicious actors based on the similarities of past attackers

                Research sources
                    - Vendor websites
                    - Vulnerability feeds
                    - Cybersecurity conferences
                    - Academic journals
                    - Request for comment (RFC) documents that publish technical specifications
                    - Local industry groups
                    - Social media
                    - threat feeds
                    - sources containing detail on adversary tools, techniques, and procedures (TTP)

            Identifying Threats

                Use a structured approach to threat management

                    Asset Focus - Use the asset inventory as the basis for the analysis (system by system)
                    Threat Focus - Identify how specific threats may affect each information system (classifying actors and how they can affect systems)
                    Service Focus - Identify the impact of various threats on a specific service (each threat that can affect an interface)

            Automating Threat Intelligence

                Automating the blacklisting of IP addresses from threat feeds (firewalls, IPSs, and routers)
                    Potentially causing service disruptions
                    Alert-only-mode to allow access but to alert IT professionals of the threat actor's interest
                    Use a variety of threat feeds to have a larger list of blacklisted IP addresses and for more filtering
                
                Incident Response
                    Manual process that requires prior knowledge and personal experience
                    Data Enrichment - Automatically supplements incident data for faster incident response time

                    Example: An IP address is known to have visited or communicated with a system within an organization
                        1. Perform source address reconnaissance including IP address ownership and geo-location
                        2. Search for related logs such as similar IP addresses or similar attack strategies
                        3. Trigger a vulnerability scan on the targeted system

                Security Orchestration, Automation, and Response (SOAR) platforms enhance SIEM capabilities

            Threat Hunting

                Not every possible type of system is impenetrable. We must make the "assumption of compromise".

                Threat Hunting - An organized, systematic approach to seeking out indicators of compromise on our networks using expertise and analytic techniques.
                    Think like the attackers
                    
                    1. Establish a hypothesis based on the profile and activities, threat feeds, or vulnerability advisories/bulletins
                    2. Find the indicators of compromise
                        Unusual binary files
                        Expected process or resource consumption
                        Deviation in network traffic
                        Unexplained log entries
                        Unapproved configuration file changes
                        
                        Searching for these indicators is the core work of threat hunting

                    3. Move into Incident Response Process
                        Look for signs as to how the attacker might have moved throughout the system
                        Start the processes of containment, eradication, and recovery

    Social Engineering Attacks

        Social Engineering

            Human Threats to Cybersecurity
            - Manipulate people into divulging information or performing an action that undermines security

                Authority - People are more likely to listen to someone with authority, creating trust
                Intimidation - scaring and threatening them to comply
                Consensus - The herd mentality/peer pressure
                Scarcity - A perceived limited amount of something
                Urgency - Time is running out
                Familiarity - Being liked causes people to say 'yes' more often

            Preventing Social Engineering
                Education about these attacks
                Awareness of common attacks and attack types

        Impersonating Attacks

            Spam - Unsolicited commercial email
                Used for a variety of marketing and identify fraud purposes
                Most spam is illegal under the CAN-SPAM ACT

            Phishing - A sub-category of spam, with the explicit purpose of obtaining information
                Often used in the reconnaissance phase of an attack

                Pre-heading - adding tags such as [URGENT] or [SAFE] to create a sense of urgency/trust
            
            Spear-Phishing - Sending a phishing attack to a targeted individual such as employees at a small company
                Using company jargon or mentioning business leaders improves the likelihood of a successful attack
                Commonly use invoice-related attacks, in hopes of someone approving the invoice without confirming the invoice

            Whaling - Sending a phishing attack to a targeted individual such as a senior executive of a company
                Sending fake court documents such as a subpoena or a recognition of being sued

            Pharming - Using a fake website that is visited by phishing attacks routing to the site (Steam lookalikes)
                Can also use DNS poisoning to get users to the site
                Copy the look and feel of a real site and harvest credentials from users who believe the sites are the same

            Vishing - Voice phishing attacks to sound like a relative or important business
                "Hello this is your bank calling, we have been notified that someone has accessed your account, please confirm your SSN"
                The goal is for sensitive information

            Smishing/SPIM - SMS and instant messaging spam attacks
                Attacks began via AOL and often use spoofing

            Spoofing - Masking or faking an identity to pose as someone trusted or important

        Identity Fraud and pretexting

            Identity fraud - Targeting single individuals such as with spear-phishing or whaling
            
            Pre-texting - Attempting to pose as a consumer and gain access to the user's account

        Watering hole attacks

            Watering hole attack - Commonly use malicious code in a browser or browser extension to execute code on particular sites, often causing pop-up warnings
                When a user visits a site, they have some trust in the site
                Web browsers and add-ons often have vulnerabilities

                Attackers create malware on a site and can wait for users to come to the site

                1. Attacker chooses a highly visited, and compromised site to infect
                2. Attacker chooses a client exploit and can bundle in the joining to of a botnet
                3. Attacker places the malware on the compromised website
                4. Attacker waits for clients to join the botnet or do whatever the malicious code instructs such as obey a command and control system

        Physical social engineering

            Shoulder-surfing - The attacker simply watches someone's screen, learning confidential information
                To prevent shoulder-surfing - be aware of your surrounding and use a privacy filter

            Dumpster diving - Digging through trash to find anything useful such as sensitive information
                To prevent dumpster diving - use a paper shredder or a degausser to wipe information before being thrown away

            Tailgating - slipping in somewhere behind someone such as in a man trap, or by holding a door open for somebody
                To prevent tailgating - Education enforcing authentication at doors and entrances

    Common Attacks

        Password Attacks
            On Linx systems, passwords are stored in a password file often stored in the /etc/password. The password is hashed using a one-way function
                To prevent the sharing of passwords, remove the password hashes from the /etc/password file. The hashes still exist in the /etc/shadow file

                    The Linux command ./unshadow combines the hashes of a user's password and username into a single file

                Hash Function - A mathematical function that converts a variable-length input into a fixed-length output in a matter that is collision-resistant.
                    - Each output must be completely different from the input
                    - It must computationally be difficult to retrieve the input from the output
                    - It must be computationally difficult to find two inputs that result in the same output
                
                Collision is when two or more inputs/outputs share a reciprocal (output/input)
                    Birthday problem - Collisions become very common when large samples sizes are used
                        - 367 people in a room 100% chance for 2 of them to share a birthday
                        - 70 people in a room 99.9% chance for 2 of them to share a birthday
                        - 23 people in a room 50% chance for 2 of them to share a birthday
                
            Brute Force Attack - The attacker tries all possibilities until one is correct

            Dictionary Attack - Assuming people use words for passwords, try all English words as passwords

            Hybrid Attacks - Assuming people use words for passwords, words, special characters, and numbers are mixed with words as passwords, + L33t and other character replacement options

            Rainbow table Attacks - Comparing hashes against a list of pre-computed hashes to find the matching hash

        Password Spraying and credential stuffing

            Password spraying - trying common passwords (rockyou.txt.gz) to attack many different accounts at the same time

            Credential stuffing - After obtaining a user's password, using the same, reused, password on different sites or systems

            To avoid these attacks
                Password spraying - Implement a password requirement using length, and special characters or check against a list of common passwords
                Credential stuffing - Promote the use of a password generator and password manager to maintain unique passwords
                Multi-Factor-Authentication (MFA) - requires users to have a secondary form of authentication not including a password

        Adversarial Artificial Intelligence

            Machine learning - A computer system discovers knowledge in data

            Artificial Intelligence - A computer system simulates human thought

                Descriptive Analytics - Describe our data through computational questions (What portion of customers are female?)

                Predictive Analytics - Trying to predict the future by looking at previously collected data

                Prescriptive Analytics - Seek to simulate possible options and optimize outcomes

            Adversarial AI - Exploits AI techniques as listed above
                - Could work to breach the confidentiality of machine learning algorithms
                - Could inject tainted training data for inaccurate data sets
                - Could try to fool working algorithms

                    Tesla Model X read a 35 MPH road sign as 85 because of a piece of tape in the 3

    Understanding Vulnerability Types

        Vulnerability Impact
            Vulnerabilities expose us to the risk of a security breach

            Goals of Information Security (CIA Triad)
                Confidentiality - The data is only accessible by authorized individuals
                    The act of a lack of confidentiality is called data exfiltration
                    An attack seeking to break confidentiality is called a disclosure attack

                Integrity - There cannot be unauthorized changes to data from unauthorized sources
                    An attack seeking to break confidentiality is called an alteration attack

                Availability - Data and sources are accessible to authorized individuals when needed
                    An attack seeking to break confidentiality is called a denial of service attack (DoS attack)

            Risks

                Financial - The risk of monetary damage or loss to an organization or person
                    Ransomware demanding money in exchange for system access to be returned

                Reputational - When negative publicity is spread among customers, employees, suppliers, and stakeholders
                    News spreads that a large company has had a data breach, people are less likely to want to do business with them

                Strategic - A risk that an organization will become less effective at meeting its major goals or objectives
                    An employee loses their laptop, This can delay development
                    A Competitor can obtain the said laptop, and develop a product before the employee's company can

                Operational - The risk of the ability to carry out day-to-day tasks
                
                Compliance - Risk involving a potential violation of laws or regulations
                    Health Insurance Portability and Accountability Act of 1996 (HIPAA)
            
        Supply Chain Vulnerabilities

            An important vendor-related issue is an announcement of and End of Life (EOL) of certain systems and software used in the supply chain
                Related to patches for systems and security updates

            Common phrases similar to End-of-Life

                End-of-Sale - Products will no longer be offered for purchase, but the vendor will still support existing customers

                End-of-Support - The vendor will reduce or eliminate support for existing users of the product. This very very close to EOL

                End-of-Life - the vendor no longer provides support or updates for the product

            Vendors can still fail to provide adequate support for existing products

            Vendors can also use embedded systems that are not disclosed to you as a user, this embedded system must also be maintained, but it relies to be supported by the vendor

            Using cloud storage for data, the vendor is supposed to manage many risks on your behalf, the vendor must provide access to the data in the future along with the rest of the CIA triad in the future

        Configuration Vulnerabilities

            A common mistake is using a system directly from a vendor or manufacturer in a production setting or on their network without modifying the default configurations
                This includes :
                    - misconfigured firewalls
                    - Open permissions
                    - Guest accounts
                    - Default accounts (root/admin)
                    - Default password (toor/admin)
                    - Unsecured root accounts

                    - Weak cipher suites
                    - Weak cryptographic protocol implementation
                        This can lead to all data going to and from systems related to the vulnerability to eavesdropping and tampering
                    - Poor key management
                    - Poor certificate management

                    To avoid these vulnerabilities, follow documented security standards and baselines when configuring systems and applications
            
            Patch management
                Systems receive all recent security updates/fixes for operating systems, applications, and firmware
            
            Account management
                Carefully configure accounts and permissions assigned to the individual accounts to prevent accidental or intentional misuse
                    To avoid improper account management, use the principle of least privilege, only giving accounts access to what they need and nothing more

        Architectural Vulnerabilities

            IT Architecture - A set of well-defined practices and processes used to design systems
                A good practice is to implement security in the planning phase of a design and not as an after-thought
                Untrained users and weak business processes can be just as dangerous as a technical flaw

            System Sprawl - New devices are connected to a network but, old devices are still not promptly disconnected leading to security vulnerabilities
                This is an even bigger risk when the old systems or assets are undocumented
                
    Vulnerability Scanning

        What is Vulnerability Management
            FUN-FACT: The Linux Kernal contains over 24 million lines of code

            Vulnerability Management - Detects, remediates, and reports vulnerabilities
                A mature process includes scanning systems for vulnerabilities, tracking patches, tracking remediation, and reporting results

            Steps to patching a vulnerability:
                1. Company learns of the vulnerability
                2. Developers analyze the issue and develop a patch
                3. The company releases the patch to customers
                4. Customers apply the patch
            
            Why Manage Vulnerabilities?
                Maintaining system security, complying with corporate policy, and complying with regulatory requirements (PCI DSS)
            
            Payment Card Industry Data Security Standard (PCI DSS) - Detailed requirements for anything dealing with credit card information
                - Quarterly Vulnerability scanning internally and externally
                - Requires new scans when major changes are made
                - Mandating the use of approved scanning vendors (ASV)
                - Remediating and rescanning until a clean report is achieved
            
                A passing score from the PCI DSS CVSS scoring system is 4.0. Anything lower is a failure, and anything higher is passing
            
            Federal Information Security Management Act (FISMA) - Requires security controls in NIST Special Publication 800-53 are followed
                - Conduct vulnerability scans regularly
                - Analyze the results of the scans
                - Remediate the legitimate vulnerabilities
                - Share information with other agencies
            
            Scans to use
                Network vulnerability scans
                    - Probe any devices attached to your network
                Application scans
                    - Scans and tests code inside applications
                Web Application scans
                    - Scans for common web application flaws such as SQL injections and XSS
                
            Also, use configuration files and log reviews to better understand the vulnerabilities

        Identify Scan Targets

            The first step in vulnerability management is to develop requirements
            Asset inventories can provide a starting point for vulnerability scans

            Network discovery scanners can create a list of devices on a network, including hostname, IP address, open ports, and if the device is live
                Scanners include Nessus and Qualys
            
            Each asset has 3 aspects on their scans
                Impact - What is the highest classification handled by the system
                likelihood - How much is the device exposed?
                    Is it behind a firewall, if so, what rules are in place, and how can it be contacted externally?
                    What services are exposed?
                Criticality - What impact does the system play on business operations

        Scan Configuration

            Nessus - My Scans > New Scan > Advanced Scan
                Settings > Basic > General - Name, Description, Folder, Targets, Upload Targets(Add File)
                Settings > Basic > Schedule - Enabled, Frequency, Starts, Timezone, Repeat Every, Repeat on(SMTWTFS), Summary
                Settings > Basic > Notifications - Email Recipient(s), Result Filters(Add Filter)

                Settings > Discovery > Host Scanning - Ping the remote Host (Enabled), Test the local Nessus Host, Use Fast network discovery
                Settings > Discovery > Host Scanning > Ping Methods - ARP (Enabled), TCP (Enabled), Destination Ports (Built-in), ICMP
                Settings > Discovery > Port Scanning - Consider unscanned ports as closed (Enabled) Local Port Enumerators (SSH, WMI, SNMP), Network Port Scanners (TCP and UDP)

                Settings > Assessment > General - Accuracy, Avoid potential false alarms
                    The assessment section also has tabs for Brute Force, Web Applications, Windows, and Malware
                
                Settings > Advanced > General - Enable Safe Checks (Avoids scans that might disrupt network functions), slow down the scan if network congestion is detected, Timeouts

                Plugins - Enabling plugins to check for certain systems or vulnerabilities

        Scan Perspective

            Scan results differ depending on the scan perspective.

            The scanner location (relative to the systems being scanned) on the network plays a crucial role in its perspective
                Scanners can only send scans to devices if other systems such as a DMZ or firewall allow the scans to pass through them, otherwise, the scans will return as closed or incomplete
                    Scanners can on the same network without limitations to test internal vulnerabilities
                    Scanners can also be on the same network behind a security system such as a firewall to test the security of systems on the network such as firewalls
                    Scanners can be external allowing for the testing of external communications to systems located on the network to test external communications

                    Internal - Router | Firewall | Scanner | System
                    Internal Limited - Router | Scanner | Firewall | System
                    External - Scanner | Router | Firewall | System

            Scanner results are limited by firewall settings, IDS/IPS rules, and network segmentation

            Agent-Based Scans - Installing software on each targeted device for system internal scans instead of network scans

            Credentialed Scanning - Uses passwords to login to systems and pull configuration information
                Credentialed scanning in Nessus
                    Credentials > Catagories(SSH/Windows) 
                    SSH - Authentication method, Username, Private Key, Private key phrase
                    Windows - Authentication method, Username, Password, Domain

            The best practice is to not provide an administrator account but a guest account(read-only access to system configs) to better test privileged access, and not change any configs just yet

        SCAP (Security Content Automation Protocol)

            The effort led by the National Institute for Standards Technology (NIST)
                Create a standard consistent language and format for discussing security issues
                Used to describe environments, vulnerabilities, and remediation steps using a consistent language

            Common Vulnerability Scoring System (CVSS) - Scoring vulnerability severity

            Common Configuration Enumeration (CCE) - Language for sharing system configurations

            Common Platform Enumerations (CPE) - Standardized product names and versions

            Common Vulnerabilities and Exposures (CVE) - Describing vulnerabilities

            Extensible Configuration Checklist Description Format (XCCDF) - Language for creating and sharing checklists and the results of processing security checklists

            Open Vulnerability and Assessment Language (OVAL) - Describes testing features in a programmatic fashion

        CVSS (Common Vulnerability Scoring System)

            10 point scale
            8 metrics

                Exploitability

                    Attack Vector (AV)
                        Physical (P) - Physical touch/manipulation is required
                        Local (L) - Physiclaor logical console access is required
                        Adjacent Network (A) - Local network access is required
                        Network (N) - Remotely exploitable vulnerability
                    
                    Attack Complexity (AC)
                        High (H) - Requires specialized conditions
                        Low (L) - Does not require specialized conditions

                    Privilege Required (PR)
                        High (H) - Requires administrative control
                        Low (L) - Requires basic user privilege
                        None (N) - Requires no prior privileges
                    
                    User Interaction (UI)
                        Required (R) - Requires that a user take some action
                        None (N) - Does not require user Interaction
                
                Impact

                    Confidentiality (C)
                        None (N) - No confidential impact
                        Low (L) - Access to some information is possible
                        High (H) - All information is compromised

                    Integrity (I)
                        None (N) - No integrity impact
                        Low (L) - Modification to some information is possible
                        High (H) - All information is compromised

                    Availability (A)
                        None (N) - No availability impact
                        Low (L) - Performance is degraded
                        High (H) - The system is shut down

                Scope (S)
                    Changed (C) - Exploiting the vulnerability can affect other components
                    Unchanged (U) - Exploiting the vulnerability only affects resources managed by the same security authority

        Analyzing Scan Reports

            Analysts need to present different data to different audiences
            
            5 Factors to Prioritize
                Vulnerability severity
                System criticality
                Information sensitivity
                Remediation difficulty
                System exposure

            Vulnerability Validation - Confirms the accuracy of the vulnerability by using security experience to go beyond the scanner's information. This includes using log files, and other sources of data
                Is the report a false positive
                    Scanners give a scan report giving data about each vulnerability found giving inputs for testing and the outputs from said tests
                    "Is the system using the affected OS or application?"
                    "Is the vulnerability a documented exception?"

                Classifying vulnerability findings
                                    |   Vulnerability Reported  |   Vulnerability Not Reported  |
                    ----------------|---------------------------|-------------------------------|
                    Exists          |       True Positive       |           False Negative      |
                    Doesn't Exist   |       False Positive      |           True Negative       |

        Correlating Scan Reports

            Correlate scan results with other sources of information
                1. Industry standards, best practices, and compliance requirements (PCI DSS CVSS scoring requirements)
                2. Technical information that already exists internally within the organization
                    Configuration management systems
                    Log file repositories
                    Other data sources such as a knowledge base or data library
                3. Trend analysis to see if an occurrence happens regularly and has been seen before (MalwareBytes and Tenable Security Center display trend information)
                    This can lead to other vulnerabilities that are causing the occurrences

    Penetration Testing and Exercises

        Penetration Testing

            The goal of a penetration test is to successfully bypass/defeat security controls
            Before beginning a penetration test, it is important to document and understand the rules (techniques/targets)
                Rules of Engagement (ROE) - A written document explaining what can be used during a penetration test
            
            Classifying Rules of Engagement

                White Box - Attackers have full access to information before they begin the test (Insider attack simulation)
                Grey Box - Attackers have limited information before they begin the test (External techniques from the black box + knowledge from the white box)
                Black Box - Attackers have no information about the target before they begin the test (External attack simulation)

            NIST suggests that penetration tests loop back and forth between the discovery and attack phases
                Discovery Phase - Attackers conduct active and passive reconnaissance and think of possible avenues to exploit (open-source intelligence, footprinting, and war-driving to discover wireless networks)
                    Some penetration testers conduct war-flying using wireless drones to scan for wireless networks
                Attack Phase - Seeks to gain access to the targeted system
                Escalate privilege to advanced privilege
                System/network browsing to find new systems to exploit. This browsing is also known as lateral movement
                    Install additional penetration testing tools to gain deeper access to the network

                Example: If a web server is compromised, tools can be installed to gain access to the database server

            Pivoting - After exploiting a vulnerability in a system, attackers use that system as a base of operations from which to target other systems on the same local network

            Persistence - After exploiting a vulnerability in a system, attacks install tools on that system to allow future access (RAT or rootkits) -even if the initial vulnerability is corrected/patches

            After the penetration testing is over, attackers should work with the organization to patch and clean up the systems/network to prevent a legitimate exploit in the future

            Penetration testing is often labor intensive but provides valuable insight

        Bug Bounty

            A formal process that allows security researchers to inspect an organization's systems in a controlled environment that encourages attackers to report vulnerabilities in a responsible fashion

            Allowing a bug bounty system typically needs a vendor (Ex. HackerOne) who specializes in the design, implementation, and operation of the programs

            Attackers will continually attack public systems scoping for reconnaissance, a majority of them are automated
                A bug bounty program will draw the attention of skilled attackers to your systems but does so to align your interests with theirs
                Attackers monetize their skills in a legal and legitimate manner
                Vendors learn from the attackers and use the information from the attackers to harden their systems to prevent future, serious attacks

                Vendors offer both self-managed and fully-managed bounty programs
                
                    Fully Managed - The vendor will validate the reports to their customers
                    Self-Managed - The organization will handle be responsible at an earlier point

                Bug bounty systems provide security analysts with a perspective of their current security controls

                FUN-FACT: In 2020, the US Department of Defense paid over $100,000 to 52 participants who found 146 flaws in their systems

        Cybersecurity Exercises

            Team exercises are beneficial because they...
                Help find vulnerabilities in applications, systems, networks, and, organizations
                Provide participants with hands-on experiences in attacking and securing systems

                Red vs. Blue
                    Red Team - Attackers who continually undermine the security of the Blue team
                    Blue Team - Defenders who will continually defend from the attacks of the Red team
                        The blue team usually gets a head start with some time to build a defense against the attacking Red team

                    White Team - Observers who judge and manage the exercise
                    Purple Team - Combine knowledge from both the Red and the Blue teams during a lesson-learned session after the exercise
                
                Capture The Flag (CTF) Red Teams and Blue teams work against each other attacking (Red) or defending (Blue) to keep prevent their opponents from completing objectives such as...
                    Disrupting a website
                    Stealing a file from a secure system
                    Causing other security failures
                    
                    The exercise is scored based on how many objects are met and how many were prevented

                Sandboxes - Provides a virtual environment for testing and exercises which limits the risks to production systems